#!/usr/bin/env ruby

require 'csv'
require 'optparse'

require 'polyglot'
require 'treetop'
require 'remparser'

# A simple script converting the output of 'remind -s' to Jorte's CSV format for
# easy import. Jorte is a replacement for the default Android calendar. It reads
# all its input from STDIN and writes to STDOUT. For Jorte to recognize the
# data, it should be saved as 'schedule_data.csv' or 'schedule_add_data.csv',
# depending on how you want to import (overwriting vs. adding data).
#
# This software is licensed under the Creative
# Commons CC0 1.0 Universal License.
# To view a copy of this license, visit
# http://creativecommons.org/publicdomain/zero/1.0/legalcode
#
# @author Patrick Hof

$options = {
  :comment => nil
}
OptionParser.new do |opts|
  opts.banner = "Usage: #{__FILE__} [options] < $STDIN"
  opts.separator ""
  opts.on("-c", "--comment CMT", "Add a comment CMT to the 'content' field (e.g. to show that the entry was imported from remind)") do |c|
    $options[:comment] = c
  end
  opts.on("-h", "--help", "Show this help") do
    puts opts
    exit
  end
end.parse!

parser = RemindParser.new

csv_string = CSV.generate(options={:headers => true}) do |csv|
  csv << ["schedule_date", "start_time", "end_date", "end_time", "title", "content", "place", "importance", "status", "meridiem"]
  $stdin.each do |line|
    rem = parser.parse(line)
    res = rem.content_hash
    row = []
    row << res[:date].strftime("%Y/%m/%d")
    if res[:body].has_key? :time
      row << res[:body][:time][:start]
    else
      row << nil
    end
    row << res[:date].strftime("%Y/%m/%d")
    if res[:body].has_key? :time
      row << res[:body][:time][:end]
    else
      row << nil
    end
    row << res[:body][:text]
    row << $options[:comment]
    row << nil
    3.times {row  << 0}
    csv << row
  end
end

puts csv_string
